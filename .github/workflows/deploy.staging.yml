# Now Github Action Workflow is safety than before
# If your code build failed, it will not stop your web application, your website will work normally
# When Code build complete, Server will only restart (temporary down) in just one or few second
# To improve your Web application quality after each build. I suggest to integrate E2E Test Headless like cypress or Unit test.
name: Deploy to Staging

on:
  push:
    branches: ["main"]

env:
  APP_ENV: ${{ secrets.STAGING }}

jobs:
  build:
    name: "Deploy to Staging"
    environment:
      name: staging

    runs-on: [self-hosted, staging]

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Delete old env file
        run: rm -r -f .env

      - name: Create env_temp file
        run: touch .env_temp

      - name: Copy Secret Key Multiline environment variable to .env_temp file
        run: echo $APP_ENV | tee .env_temp

      - name: Replace space character with break-line in .env file
        run: sed 's/ /\n/g' .env_temp >> .env

      - name: Remove .env_temp file
        run: rm -r -f .env_temp

      - name: Install Yarn, PM2 (Install first time only, after that this command run quickly)
        run: npm install -g yarn pm2

      - name: Remove package-lock.json (Prevent error or conflicted version of npm, yarn, etc when developer forgot to delete it in pull request)
        run: rm -r -f package-lock.json

      - name: Install or Update Node Module from package.json
        run: yarn

      - name: Generate Icon Font (Optional)
        run: yarn genfont

      - name: Build Optimized Production Website (.next folder will be created)
        run: yarn build

      - name: Copy all file (After build successfull) to Web Server Folder (Default Folder defined by Linux Home Directory)
        run: cp -rf ./ $HOME/dist

      - name: Change directory to Web Server Folder and restart Web Server.
        run: |
          RUNNER_TRACKING_ID="" && \
          cd $HOME/dist && \
          pm2 start yarn -- start && \
          pm2 restart yarn
